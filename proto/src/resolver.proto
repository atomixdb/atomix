syntax = "proto3";
package resolver;

service Resolver {
    rpc Commit(CommitRequest) returns (CommitResponse) {}
    rpc RegisterCommittedTransactions(RegisterCommittedTransactionsRequest) returns (RegisterCommittedTransactionsResponse) {}
    rpc GetStats(GetStatsRequest) returns (GetStatsResponse) {}
    rpc GetTransactionInfoStatus(GetTransactionInfoStatusRequest) returns (GetTransactionInfoStatusResponse) {}
    rpc GetResolvedTransactionsStatus(GetResolvedTransactionsStatusRequest) returns (GetResolvedTransactionsStatusResponse) {}
    rpc GetWaitingTransactionsStatus(GetWaitingTransactionsStatusRequest) returns (GetWaitingTransactionsStatusResponse) {}
    rpc GetGroupCommitStatus(GetGroupCommitStatusRequest) returns (GetGroupCommitStatusResponse) {}
    rpc GetNumWaitingTransactions(GetNumWaitingTransactionsRequest) returns (GetNumWaitingTransactionsResponse) {}
}

message RegisterCommittedTransactionsRequest {
    repeated string transaction_ids = 1;
}

message RegisterCommittedTransactionsResponse {
    string status = 1;
}

message RangeId {
    string keyspace_id = 1;
    string range_id = 2;
}

message ParticipantRangeInfo {
    RangeId range_id = 1;
    bool has_writes = 2;
}

message CommitRequest {
    string transaction_id = 1;
    repeated string dependencies = 2;
    repeated ParticipantRangeInfo participant_ranges = 3;
    bool fake = 4;
}

message CommitResponse {
    string status = 1;
}

message GetStatsRequest {
}

message GetStatsResponse {
  map<string, double> stats = 1;
}


message GetTransactionInfoStatusRequest {
}

message GetTransactionInfoStatusResponse {
  string status = 1;
}

message GetResolvedTransactionsStatusRequest {
}

message GetResolvedTransactionsStatusResponse {
  string status = 1;
}

message GetWaitingTransactionsStatusRequest {
}

message GetWaitingTransactionsStatusResponse {
  string status = 1;
}

message GetGroupCommitStatusRequest {
}

message GetGroupCommitStatusResponse {
  string status = 1;
}

message GetNumWaitingTransactionsRequest {
}

message GetNumWaitingTransactionsResponse {
  uint32 num_waiting_transactions = 1;
}
